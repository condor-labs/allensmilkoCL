{"version":3,"sources":["../../../api/quotes/Model.js"],"names":["Schema","Model","mongoose","QuoteSchema","clientName","email","total","Number","mongoosePaginate","QuoteModel","Quote","customizationOptions","QuoteTC","schemaComposer","findQuotes","paginateQuotes","findQuoteById","quoteCreateOne","createMany","graphqlSchema"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,SAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,UAAA,CAAA,CAAA;;AACA,IAAA,kBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,sBAAA,CAAA,CAAA;;AACA,IAAA,uBAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;;AACA,IAAA,eAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEQA,M,GAAkBE,SAAAA,CAAAA,SAAAA,CAAAA,CAAlBF,M;IAAQC,K,GAAUC,SAAAA,CAAAA,SAAAA,CAAAA,CAAVD,K;AAEhB,IAAME,WAAW,GAAG,IAAA,MAAA,CAAW;AAC3BC,EAAAA,UAAU,EADiB,MAAA;AAE3BC,EAAAA,KAAK,EAFsB,MAAA;AAG3BC,EAAAA,KAAK,EAAEC;AAHoB,CAAX,CAApB;AAMAJ,WAAW,CAAXA,MAAAA,CAAmBK,kBAAAA,CAAnBL,SAAmBK,CAAnBL;;IAEMM,U;;;;;;;;;;;;EAAmBR,K;;AAElB,IAAMS,KAAK,GAAGR,SAAAA,CAAAA,SAAAA,CAAAA,CAAAA,KAAAA,CAAAA,UAAAA,EAAAA,WAAAA,EAAd,OAAcA,CAAd;;;AAEP,IAAMS,oBAAoB,GAA1B,EAAA;AACA,IAAMC,OAAO,GAAG,CAAA,GAAA,uBAAA,CAAA,eAAA,EAAA,KAAA,EAAhB,oBAAgB,CAAhB;;AAEAC,eAAAA,CAAAA,cAAAA,CAAAA,KAAAA,CAAAA,SAAAA,CAA+B;AAC7BC,EAAAA,UAAU,EAAEF,OAAO,CAAPA,iBAAAA,CADiB,QACjBA,EADiB;AAE7BG,EAAAA,cAAc,EAAEH,OAAO,CAAPA,iBAAAA,CAFa,UAEbA,EAFa;AAG7BI,EAAAA,aAAa,EAAEJ,OAAO,CAAPA,iBAAAA,CAAAA,QAAAA;AAHc,CAA/BC;;AAMAA,eAAAA,CAAAA,cAAAA,CAAAA,QAAAA,CAAAA,SAAAA,CAAkC;AAChCI,EAAAA,cAAc,EAAEL,OAAO,CAAPA,iBAAAA,CADgB,SAChBA,EADgB;AAEhCM,EAAAA,UAAU,EAAEN,OAAO,CAAPA,iBAAAA,CAAAA,UAAAA;AAFoB,CAAlCC;;AAKO,IAAMM,aAAa,GAAGN,eAAAA,CAAAA,cAAAA,CAAtB,WAAsBA,EAAtB","sourcesContent":["import mongoose from 'mongoose';\nimport mongoosePaginate from 'mongoose-paginate-v2';\nimport { composeMongoose } from 'graphql-compose-mongoose';\nimport { schemaComposer } from 'graphql-compose';\n\nconst { Schema, Model } = mongoose;\n\nconst QuoteSchema = new Schema({\n    clientName: String,\n    email: String,\n    total: Number\n});\n  \nQuoteSchema.plugin(mongoosePaginate);\n  \nclass QuoteModel extends Model {}\n\nexport const Quote = mongoose.model(QuoteModel, QuoteSchema, 'quote');\n\nconst customizationOptions = {};\nconst QuoteTC = composeMongoose(Quote, customizationOptions);\n\nschemaComposer.Query.addFields({\n  findQuotes: QuoteTC.mongooseResolvers.findMany(),\n  paginateQuotes: QuoteTC.mongooseResolvers.pagination(),\n  findQuoteById: QuoteTC.mongooseResolvers.findById(),\n});\n\nschemaComposer.Mutation.addFields({\n  quoteCreateOne: QuoteTC.mongooseResolvers.createOne(),\n  createMany: QuoteTC.mongooseResolvers.createMany(),\n});\n\nexport const graphqlSchema = schemaComposer.buildSchema();\n"],"file":"Model.js"}