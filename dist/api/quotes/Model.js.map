{"version":3,"sources":["../../../api/quotes/Model.js"],"names":["Schema","mongoose","Model","QuoteSchema","clientName","String","email","total","Number","plugin","mongoosePaginate","QuoteModel","Quote","model","customizationOptions","QuoteTC","schemaComposer","Query","addFields","findQuotes","mongooseResolvers","findMany","paginateQuotes","pagination","findQuoteById","findById","Mutation","quoteCreateOne","createOne","graphqlSchema","buildSchema"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;IAEQA,M,GAAkBC,oB,CAAlBD,M;IAAQE,K,GAAUD,oB,CAAVC,K;AAEhB,IAAMC,WAAW,GAAG,IAAIH,MAAJ,CAAW;AAC3BI,EAAAA,UAAU,EAAEC,MADe;AAE3BC,EAAAA,KAAK,EAAED,MAFoB;AAG3BE,EAAAA,KAAK,EAAEC;AAHoB,CAAX,CAApB;AAMAL,WAAW,CAACM,MAAZ,CAAmBC,6BAAnB;;IAEMC,U;;;;;;;;;;;;EAAmBT,K;;AAElB,IAAMU,KAAK,GAAGX,qBAASY,KAAT,CAAeF,UAAf,EAA2BR,WAA3B,EAAwC,OAAxC,CAAd;;;AAEP,IAAMW,oBAAoB,GAAG,EAA7B;AACA,IAAMC,OAAO,GAAG,6CAAgBH,KAAhB,EAAuBE,oBAAvB,CAAhB;;AAEAE,+BAAeC,KAAf,CAAqBC,SAArB,CAA+B;AAC7BC,EAAAA,UAAU,EAAEJ,OAAO,CAACK,iBAAR,CAA0BC,QAA1B,EADiB;AAE7BC,EAAAA,cAAc,EAAEP,OAAO,CAACK,iBAAR,CAA0BG,UAA1B,EAFa;AAG7BC,EAAAA,aAAa,EAAET,OAAO,CAACK,iBAAR,CAA0BK,QAA1B;AAHc,CAA/B;;AAMAT,+BAAeU,QAAf,CAAwBR,SAAxB,CAAkC;AAChCS,EAAAA,cAAc,EAAEZ,OAAO,CAACK,iBAAR,CAA0BQ,SAA1B;AADgB,CAAlC;;AAIO,IAAMC,aAAa,GAAGb,+BAAec,WAAf,EAAtB","sourcesContent":["import mongoose from 'mongoose';\nimport mongoosePaginate from 'mongoose-paginate-v2';\nimport { composeMongoose } from 'graphql-compose-mongoose';\nimport { schemaComposer } from 'graphql-compose';\n\nconst { Schema, Model } = mongoose;\n\nconst QuoteSchema = new Schema({\n    clientName: String,\n    email: String,\n    total: Number\n});\n  \nQuoteSchema.plugin(mongoosePaginate);\n  \nclass QuoteModel extends Model {}\n\nexport const Quote = mongoose.model(QuoteModel, QuoteSchema, 'quote');\n\nconst customizationOptions = {};\nconst QuoteTC = composeMongoose(Quote, customizationOptions);\n\nschemaComposer.Query.addFields({\n  findQuotes: QuoteTC.mongooseResolvers.findMany(),\n  paginateQuotes: QuoteTC.mongooseResolvers.pagination(),\n  findQuoteById: QuoteTC.mongooseResolvers.findById(),\n});\n\nschemaComposer.Mutation.addFields({\n  quoteCreateOne: QuoteTC.mongooseResolvers.createOne(),\n});\n\nexport const graphqlSchema = schemaComposer.buildSchema();\n"],"file":"Model.js"}