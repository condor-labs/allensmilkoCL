{"version":3,"sources":["../../../api/quotes/Service.js"],"names":["QuoteService","createQuote","payload","quote","Quote","save","quoteSaved","console","log","Error","getQuotes","query","offset","parseInt","limit","paginate"],"mappings":";;;;;;;AAAA;;;;;;AACA,IAAMA,YAAY,GAAG,EAArB;;AAEAA,YAAY,CAACC,WAAb;AAAA,qEAA2B,iBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEbC,YAAAA,KAFa,GAEL,IAAIC,YAAJ,CAAUF,OAAV,CAFK;AAAA;AAAA,mBAIMC,KAAK,CAACE,IAAN,EAJN;;AAAA;AAIbC,YAAAA,UAJa;AAKnBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AALmB,6CAMZH,KANY;;AAAA;AAAA;AAAA;AAAA,kBAQb,IAAIM,KAAJ,aARa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3B;;AAAA;AAAA;AAAA;AAAA;;AAYAT,YAAY,CAACU,SAAb;AAAA,sEAAyB,kBAAMC,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEXC,YAAAA,MAFW,GAEFD,KAAK,CAACC,MAAN,GAAcC,QAAQ,CAACF,KAAK,CAACC,MAAP,CAAtB,GAAsC,CAFpC;AAGXE,YAAAA,KAHW,GAGHH,KAAK,CAACG,KAAN,GAAaD,QAAQ,CAACF,KAAK,CAACG,KAAP,CAArB,GAAoC,EAHjC;AAAA;AAAA,mBAIJV,aAAMW,QAAN,CAAe,EAAf,EAAmB;AAAEH,cAAAA,MAAM,EAANA,MAAF;AAAUE,cAAAA,KAAK,EAALA;AAAV,aAAnB,CAJI;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,kBAMX,IAAIL,KAAJ,cANW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzB;;AAAA;AAAA;AAAA;AAAA;;eAUeT,Y","sourcesContent":["import { Quote } from './Model.js'\nconst QuoteService = {};\n\nQuoteService.createQuote = async(payload) => {\n    try {\n        const quote = new Quote(payload);\n\n        const quoteSaved = await quote.save();\n        console.log(quoteSaved)\n        return quote;\n    } catch (error) {\n        throw new Error(error);\n    }\n}\n\nQuoteService.getQuotes = async(query) => {\n    try {\n        const offset = query.offset? parseInt(query.offset): 0;\n        const limit = query.limit? parseInt(query.limit): 10;\n        return await Quote.paginate({}, { offset, limit });\n    } catch (error) {\n        throw new Error(error);\n    }\n}\n\nexport default QuoteService;"],"file":"Service.js"}